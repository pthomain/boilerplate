/*
 *
 *  Copyright (C) 2017-2020 Pierre Thomain
 *
 *  Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 *
 */

plugins {
    id "com.jfrog.bintray"
}
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

group = 'dev.pthomain.boilerplate'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task classesJar(type: Jar) {
    from "$buildDir/intermediates/javac/release/classes"
}

artifacts {
    archives classesJar
    archives javadocJar
    archives sourcesJar
}

project.ext {
    mavGitUrl = 'https://github.com/pthomain/boilerplate.git'
    mavProjectName = 'Boilerplate'
    mavLibraryLicenses = ["Apache-2.0": 'http://www.apache.org/licenses/LICENSE-2.0.txt']
    mavLibraryDescription = "Android Boilerplate"
    mavPublishToMavenLocal = true
    mavSiteUrl = 'https://github.com/pthomain/boilerplate'
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publishing {
    publications {
        release(MavenPublication) {
            groupId 'dev.pthomain.boilerplate'
            artifactId 'ui'
            version boilerplateVersion
            artifact("$buildDir/outputs/aar/ui-release.aar")

            // Define this explicitly if using implementation or api configurations
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = 'pthomain'
    key = properties.getProperty("bintray_api_key")
    publications = ['release']
    configurations = ['archives']
    override = true

    pkg {
        repo = 'releases'
        name = "Boilerplate"
        description = "Android Boilerplate"
        licenses = ['Apache-2.0']
        publicDownloadNumbers = false
        vcsUrl = 'https://github.com/pthomain/boilerplate.git'
        version {
            licenses = ['Apache-2.0']
            desc = "Version $boilerplateVersion"
            name = boilerplateVersion
            released = new Date()
            vcsTag = boilerplateVersion
        }
    }
}

apply from: 'https://raw.githubusercontent.com/sky-uk/gradle-maven-plugin/master/gradle-mavenizer.gradle'

dependencies {
    implementation project(':core')
    implementation appDependencies.appcompatV7
    implementation appDependencies.recyclerView
}
